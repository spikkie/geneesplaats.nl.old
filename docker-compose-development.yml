version: "3.8"



services:
  postgres:
    restart: always
    container_name: ${POSTGRES_REPOSITORY}
    image: ${POSTGRES_GENEESPLAATS_NL_IMAGE}
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - postgres_backup_dev:/backups
    networks:
      - common-network
      # - postgres-network
    env_file:
      - ./.env
      - ./.postgres_env

  django:
    container_name: ${DJANGO_REPOSITORY}
    image: ${DJANGO_GENEESPLAATS_NL_IMAGE}:${DJANGO_GENEESPLAATS_NL_VERSION}
    restart: always
    build:
      context: .
      dockerfile: ./docker/django/Dockerfile
    depends_on:
      - postgres
    expose:
      - "${DJANGO_EXPOSE_PORT}"
    ports:
      - "${DJANGO_EXPOSE_PORT}:${DJANGO_EXPOSE_PORT}"
    volumes:
      - type: bind
        source: ./src
        target: /app
    networks:
      - common-network
      # - postgres-network
      # - react-network
    env_file:
      - ./.env
      - ./.django_env
      
  react:
    container_name: ${REACT_REPOSITORY}
    image: ${REACT_GENEESPLAATS_NL_IMAGE}:${REACT_GENEESPLAATS_NL_VERSION}
    restart: always
    build:
      context: ./frontend
      dockerfile: ../docker/react/Dockerfile
    depends_on:
      - django 
    env_file: ./.react_env
    expose:
      - "${REACT_APP_EXPOSE_PORT}"
    ports:
      - "${REACT_APP_EXPOSE_PORT}:${REACT_APP_EXPOSE_PORT}"
    volumes:
      - type: bind
        source: ./frontend/src
        target: /app/src
    networks:
      - common-network
      # - react-network
    env_file:
      - ./.env
      - ./.react_env

volumes:
  postgres_data_dev: {}
  postgres_backup_dev: {}
  
networks:
  postgres-network:
    driver: bridge
  react-network:
    driver: bridge
  common-network:
    driver: bridge
