installation from
https://docs.nginx.com/nginx-ingress-controller/installation/installation-with-manifests/

github
https://github.com/nginxinc/kubernetes-ingress/releases


git checkout v1.6.2



3. Deploy the Ingress Controller

We include two options for deploying the Ingress controller:

    Deployment. Use a Deployment if you plan to dynamically change the number of Ingress controller replicas.
    DaemonSet. Use a DaemonSet for deploying the Ingress controller on every node or a subset of nodes.


I will use Deployment.
kubectl apply -f deployment/nginx-ingress.yaml



#Apply all manifests
cd  ~/projects/geneesplaats.nl/google_cloud_production/NGINX_Ingress_controller/
 kubectl  apply -f $(ls .| tr '\n' ','  | sed 's/.$//')


3.2 Check that the Ingress Controller is Running

Run the following command to make sure that the Ingress controller pods are running:

$ kubectl get pods --namespace=nginx-ingress



#need to create a name-space
kubectl create namespace nginx-ingress


#apply all the manifests
from  directorie
/home/spikkie/projects/geneesplaats.nl/google_cloud_production/NGINX_Ingress_controller
run
 kubectl apply -f $(ls .| tr '\n' ','  | sed 's/.$//')



7-loadbalancer.yaml



Use the public IP of the load balancer to access the Ingress controller. To get the public IP:
kubectl get svc nginx-ingress --namespace=nginx-ingress



Uninstall the Ingress Controller

    Delete the nginx-ingress namespace to uninstall the Ingress controller along with all the auxiliary resources that were created:

    $ kubectl delete namespace nginx-ingress

    Delete the ClusterRole and ClusterRoleBinding created in that step:

    $ kubectl delete clusterrole nginx-ingress
    $ kubectl delete clusterrolebinding nginx-ingress


